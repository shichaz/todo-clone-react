[{"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\index.js":"1","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\App.js":"2","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\layout\\Header.js":"3","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\layout\\Content.js":"4","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\layout\\Sidebar.js":"5","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\Tasks.js":"6","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\Checkbox.js":"7","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\firebase.js":"8","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\hooks\\index.js":"9","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\helpers\\index.js":"10","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\constants\\index.js":"11","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\context\\index.js":"12","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\AddProject.js":"13","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\AddTask.js":"14","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\ProjectOverlay.js":"15","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\Projects.js":"16","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\IndividualProject.js":"17","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\TaskDate.js":"18","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\context\\projects-context.js":"19","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\context\\selected-project-context.js":"20"},{"size":171,"mtime":1608692475348,"results":"21","hashOfConfig":"22"},{"size":782,"mtime":1608692448510,"results":"23","hashOfConfig":"22"},{"size":1684,"mtime":1608691790030,"results":"24","hashOfConfig":"22"},{"size":208,"mtime":1608691822188,"results":"25","hashOfConfig":"22"},{"size":3369,"mtime":1608691769603,"results":"26","hashOfConfig":"22"},{"size":1345,"mtime":1608692209801,"results":"27","hashOfConfig":"22"},{"size":769,"mtime":1608691905088,"results":"28","hashOfConfig":"22"},{"size":504,"mtime":1608609086205,"results":"29","hashOfConfig":"22"},{"size":2367,"mtime":1608692601486,"results":"30","hashOfConfig":"22"},{"size":962,"mtime":1608692366504,"results":"31","hashOfConfig":"22"},{"size":151,"mtime":1608538339709,"results":"32","hashOfConfig":"22"},{"size":396,"mtime":1608692292060,"results":"33","hashOfConfig":"22"},{"size":2437,"mtime":1608691855048,"results":"34","hashOfConfig":"22"},{"size":6002,"mtime":1608692908874,"results":"35","hashOfConfig":"22"},{"size":1311,"mtime":1608691956664,"results":"36","hashOfConfig":"22"},{"size":1449,"mtime":1608691979409,"results":"37","hashOfConfig":"22"},{"size":2201,"mtime":1608691934420,"results":"38","hashOfConfig":"22"},{"size":2693,"mtime":1608692189593,"results":"39","hashOfConfig":"22"},{"size":588,"mtime":1608692994037,"results":"40","hashOfConfig":"22"},{"size":643,"mtime":1608692346923,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ljy9xo",{"filePath":"44","messages":"45","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":4,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":8,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":3,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":2,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"49"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\index.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\App.js",["90"],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\layout\\Header.js",["91","92","93"],"import React, { useState } from 'react';\nimport { FaPizzaSlice } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { AddTask } from '../AddTask';\n\nexport const Header = ({ darkMode, setDarkMode }) => {\n  const [shouldShowMain, setShouldShowMain] = useState(false);\n  const [showQuickAddTask, setShowQuickAddTask] = useState(false);\n\n  return (\n    <header className=\"header\" data-testid=\"header\">\n      <nav>\n        <div className=\"logo\">\n          <img src=\"/images/logo.png\" alt=\"Todoist\" />\n        </div>\n        <div className=\"settings\">\n          <ul>\n            <li className=\"settings__add\">\n              <button\n                data-testid=\"quick-add-task-action\"\n                aria-label=\"Quick add task\"\n                type=\"button\"\n                onClick={() => {\n                  setShowQuickAddTask(true);\n                  setShouldShowMain(true);\n                }}\n              >\n                +\n              </button>\n            </li>\n            <li className=\"settings__darkmode\">\n              <button\n                data-testid=\"dark-mode-action\"\n                aria-label=\"Darkmode on/off\"\n                type=\"button\"\n                onClick={() => setDarkMode(!darkMode)}\n              >\n                <FaPizzaSlice />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <AddTask\n        showAddTaskMain={false}\n        shouldShowMain={shouldShowMain}\n        showQuickAddTask={showQuickAddTask}\n        setShowQuickAddTask={setShowQuickAddTask}\n      />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  darkMode: PropTypes.bool.isRequired,\n  setDarkMode: PropTypes.func.isRequired,\n};\n",["94","95","96","97","98"],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\layout\\Content.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\layout\\Sidebar.js",["99","100","101","102"],"import React, { useState } from 'react';\nimport {\n  FaChevronDown,\n  FaInbox,\n  FaRegCalendarAlt,\n  FaRegCalendar,\n} from 'react-icons/fa';\nimport { Projects } from '../Projects';\nimport { useSelectedProjectValue } from '../../context';\nimport { AddProject } from '../AddProject';\n\nexport const Sidebar = () => {\n  const { setSelectedProject } = useSelectedProjectValue();\n  const [active, setActive] = useState('inbox');\n  const [showProjects, setShowProjects] = useState(true);\n\n  return (\n    <div className=\"sidebar\" data-testid=\"sidebar\">\n      <ul className=\"sidebar__generic\">\n        <li\n          data-testid=\"inbox\"\n          className={active === 'inbox' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"inbox-action\"\n            aria-label=\"Show inbox tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('inbox');\n              setSelectedProject('INBOX');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('inbox');\n                setSelectedProject('INBOX');\n              }\n            }}\n          >\n            <span>\n              <FaInbox />\n            </span>\n            <span>Inbox</span>\n          </div>\n        </li>\n        <li\n          data-testid=\"today\"\n          className={active === 'today' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"today-action\"\n            aria-label=\"Show today's tasks\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('today');\n              setSelectedProject('TODAY');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('today');\n                setSelectedProject('TODAY');\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendar />\n            </span>\n            <span>Today</span>\n          </div>\n        </li>\n        <li\n          data-testid=\"next_7\"\n          className={active === 'next_7' ? 'active' : undefined}\n        >\n          <div\n            data-testid=\"next_7-action\"\n            aria-label=\"Show tasks for the next 7 days\"\n            tabIndex={0}\n            role=\"button\"\n            onClick={() => {\n              setActive('next_7');\n              setSelectedProject('NEXT_7');\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                setActive('next_7');\n                setSelectedProject('NEXT_7');\n              }\n            }}\n          >\n            <span>\n              <FaRegCalendarAlt />\n            </span>\n            <span>Next 7 days</span>\n          </div>\n        </li>\n      </ul>\n      <div\n        className=\"sidebar__middle\"\n        aria-label=\"Show/hide projects\"\n        onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowProjects(!showProjects);\n        }}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <span>\n          <FaChevronDown\n            className={!showProjects ? 'hidden-projects' : undefined}\n          />\n        </span>\n        <h2>Projects</h2>\n      </div>\n\n      <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\n\n      {showProjects && <AddProject />}\n    </div>\n  );\n};\n","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\Tasks.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\Checkbox.js",["103"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Checkbox = ({ id, taskDesc }) => {\r\n  const archiveTask = () => {\r\n    firebase.firestore().collection('tasks').doc(id).update({\r\n      archived: true,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"checkbox-holder\"\r\n      data-testid=\"checkbox-action\"\r\n      onClick={() => archiveTask()}\r\n      onKeyDown={(e) => {\r\n        if (e.key === 'Enter') archiveTask();\r\n      }}\r\n      aria-label={`Mark ${taskDesc} as done?`}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <span className=\"checkbox\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nCheckbox.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  taskDesc: PropTypes.string.isRequired,\r\n};\r\n","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\firebase.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\hooks\\index.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\helpers\\index.js",["104","105","106","107","108","109","110","111","112"],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\constants\\index.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\context\\index.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\AddProject.js",["113","114","115"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firebase } from '../firebase';\r\nimport { generatePushId } from '../helpers';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const AddProject = ({ shouldShow = false }) => {\r\n  const [show, setShow] = useState(shouldShow);\r\n  const [projectName, setProjectName] = useState('');\r\n\r\n  const projectId = generatePushId();\r\n  const { projects, setProjects } = useProjectsValue();\r\n\r\n  const addProject = () =>\r\n    projectName &&\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .add({\r\n        projectId,\r\n        name: projectName,\r\n        userId: 'jlIFXIwyAL3tzHMtzRbw',\r\n      })\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setProjectName('');\r\n        setShow(false);\r\n      });\r\n\r\n  return (\r\n    <div className=\"add-project\" data-testid=\"add-project\">\r\n      {show && (\r\n        <div className=\"add-project__input\" data-testid=\"add-project-inner\">\r\n          <input\r\n            value={projectName}\r\n            onChange={(e) => setProjectName(e.target.value)}\r\n            className=\"add-project__name\"\r\n            data-testid=\"project-name\"\r\n            type=\"text\"\r\n            placeholder=\"Name your project\"\r\n          />\r\n          <button\r\n            className=\"add-project__submit\"\r\n            type=\"button\"\r\n            onClick={() => addProject()}\r\n            data-testid=\"add-project-submit\"\r\n          >\r\n            Add Project\r\n          </button>\r\n          <span\r\n            aria-label=\"Cancel adding project\"\r\n            data-testid=\"hide-project-overlay\"\r\n            className=\"add-project__cancel\"\r\n            onClick={() => setShow(false)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === 'Enter') setShow(false);\r\n            }}\r\n            role=\"button\"\r\n            tabIndex={0}\r\n          >\r\n            Cancel\r\n          </span>\r\n        </div>\r\n      )}\r\n      <span className=\"add-project__plus\">+</span>\r\n      <span\r\n        aria-label=\"Add Project\"\r\n        data-testid=\"add-project-action\"\r\n        className=\"add-project__text\"\r\n        onClick={() => setShow(!show)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') setShow(!show);\r\n        }}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n      >\r\n        Add Project\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddProject.propTypes = {\r\n  shouldShow: PropTypes.bool,\r\n};\r\n","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\AddTask.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\ProjectOverlay.js",["116","117","118","119","120","121","122"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue } from '../context';\r\n\r\nexport const ProjectOverlay = ({\r\n  setProject,\r\n  showProjectOverlay,\r\n  setShowProjectOverlay,\r\n}) => {\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    showProjectOverlay && (\r\n      <div className=\"project-overlay\" data-testid=\"project-overlay\">\r\n        <ul className=\"project-overlay__list\">\r\n          {projects.map((project) => (\r\n            <li key={project.projectId}>\r\n              <div\r\n                data-testid=\"project-overlay-action\"\r\n                onClick={() => {\r\n                  setProject(project.projectId);\r\n                  setShowProjectOverlay(false);\r\n                }}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    setProject(project.projectId);\r\n                    setShowProjectOverlay(false);\r\n                  }\r\n                }}\r\n                role=\"button\"\r\n                tabIndex={0}\r\n                aria-label=\"Select the task project\"\r\n              >\r\n                {project.name}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nProjectOverlay.propTypes = {\r\n  projects: PropTypes.array,\r\n};\r\n","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\Projects.js",["123"],"import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\nimport { IndividualProject } from './IndividualProject';\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n  const [active, setActive] = useState(activeValue);\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n  const { projects } = useProjectsValue();\r\n\r\n  return (\r\n    projects &&\r\n    projects.map((project) => (\r\n      <li\r\n        key={project.projectId}\r\n        data-testid=\"project-action-parent\"\r\n        data-doc-id={project.docId}\r\n        className={\r\n          active === project.projectId\r\n            ? 'active sidebar__project'\r\n            : 'sidebar__project'\r\n        }\r\n      >\r\n        <div\r\n          role=\"button\"\r\n          data-testid=\"project-action\"\r\n          tabIndex={0}\r\n          aria-label={`Select ${project.name} as the task project`}\r\n          onClick={() => {\r\n            setActive(project.projectId);\r\n            setSelectedProject(project.projectId);\r\n          }}\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'Enter') {\r\n              setActive(project.projectId);\r\n              setSelectedProject(project.projectId);\r\n            }\r\n          }}\r\n        >\r\n          <IndividualProject project={project} />\r\n        </div>\r\n      </li>\r\n    ))\r\n  );\r\n};\r\n\r\nProjects.propTypes = {\r\n  activeValue: PropTypes.bool,\r\n};\r\n","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\IndividualProject.js",["124","125"],"import React, { useState } from 'react';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport PropTypes from 'prop-types';\r\nimport { useProjectsValue, useSelectedProjectValue } from '../context';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const { projects, setProjects } = useProjectsValue();\r\n  const { setSelectedProject } = useSelectedProjectValue();\r\n\r\n  const deleteProject = (docId) => {\r\n    firebase\r\n      .firestore()\r\n      .collection('projects')\r\n      .doc(docId)\r\n      .delete()\r\n      .then(() => {\r\n        setProjects([...projects]);\r\n        setSelectedProject('INBOX');\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <span className=\"sidebar__dot\">•</span>\r\n      <span className=\"sidebar__project-name\">{project.name}</span>\r\n      <span\r\n        className=\"sidebar__project-delete\"\r\n        data-testid=\"delete-project\"\r\n        onClick={() => setShowConfirm(!showConfirm)}\r\n        onKeyDown={(e) => {\r\n          if (e.key === 'Enter') setShowConfirm(!showConfirm);\r\n        }}\r\n        tabIndex={0}\r\n        role=\"button\"\r\n        aria-label=\"Confirm deletion of project\"\r\n      >\r\n        <FaTrashAlt />\r\n        {showConfirm && (\r\n          <div className=\"project-delete-modal\">\r\n            <div className=\"project-delete-modal__inner\">\r\n              <p>Are you sure you want to delete this project?</p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => deleteProject(project.docId)}\r\n              >\r\n                Delete\r\n              </button>\r\n              <span\r\n                onClick={() => setShowConfirm(!showConfirm)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') setShowConfirm(!showConfirm);\r\n                }}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label=\"Cancel adding project, do not delete\"\r\n              >\r\n                Cancel\r\n              </span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nIndividualProject.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n};\r\n","C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\components\\TaskDate.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\context\\projects-context.js",[],"C:\\Users\\Yasin\\Desktop\\Mango\\todo\\src\\context\\selected-project-context.js",[],{"ruleId":"126","severity":2,"message":"127","line":26,"column":3,"nodeType":"128","endLine":26,"endColumn":34},{"ruleId":"129","severity":2,"message":"130","line":3,"column":23,"nodeType":"131","endLine":3,"endColumn":35},{"ruleId":"132","severity":2,"message":"133","line":4,"column":25,"nodeType":"131","endLine":4,"endColumn":37},{"ruleId":"134","severity":2,"message":"135","line":4,"column":25,"nodeType":"131","endLine":4,"endColumn":37},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"132","severity":2,"message":"146","line":8,"column":26,"nodeType":"131","endLine":8,"endColumn":39},{"ruleId":"134","severity":2,"message":"147","line":8,"column":26,"nodeType":"131","endLine":8,"endColumn":39},{"ruleId":"132","severity":2,"message":"148","line":10,"column":28,"nodeType":"131","endLine":10,"endColumn":43},{"ruleId":"134","severity":2,"message":"149","line":10,"column":28,"nodeType":"131","endLine":10,"endColumn":43},{"ruleId":"129","severity":2,"message":"130","line":2,"column":23,"nodeType":"131","endLine":2,"endColumn":35},{"ruleId":"150","severity":1,"message":"151","line":18,"column":10,"nodeType":"152","messageId":"153","endLine":18,"endColumn":19},{"ruleId":"154","severity":2,"message":"155","line":22,"column":10,"nodeType":"156","messageId":"157","endLine":22,"endColumn":19},{"ruleId":"158","severity":2,"message":"159","line":22,"column":10,"nodeType":"156","messageId":"160","endLine":22,"endColumn":19},{"ruleId":"161","severity":2,"message":"162","line":22,"column":29,"nodeType":"163","messageId":"164","endLine":22,"endColumn":32},{"ruleId":"165","severity":2,"message":"166","line":29,"column":10,"nodeType":"167","messageId":"168","endLine":29,"endColumn":11},{"ruleId":"165","severity":2,"message":"166","line":29,"column":17,"nodeType":"167","messageId":"168","endLine":29,"endColumn":18},{"ruleId":"165","severity":2,"message":"166","line":29,"column":25,"nodeType":"167","messageId":"168","endLine":29,"endColumn":26},{"ruleId":"161","severity":2,"message":"169","line":29,"column":25,"nodeType":"163","messageId":"164","endLine":29,"endColumn":28},{"ruleId":"165","severity":2,"message":"166","line":30,"column":45,"nodeType":"167","messageId":"168","endLine":30,"endColumn":46},{"ruleId":"129","severity":2,"message":"130","line":2,"column":23,"nodeType":"131","endLine":2,"endColumn":35},{"ruleId":"170","severity":2,"message":"171","line":4,"column":10,"nodeType":"167","endLine":4,"endColumn":24},{"ruleId":"126","severity":2,"message":"172","line":84,"column":3,"nodeType":"128","endLine":84,"endColumn":29},{"ruleId":"129","severity":2,"message":"130","line":2,"column":23,"nodeType":"131","endLine":2,"endColumn":35},{"ruleId":"173","severity":2,"message":"174","line":6,"column":3,"nodeType":"128","endLine":6,"endColumn":13},{"ruleId":"173","severity":2,"message":"175","line":7,"column":3,"nodeType":"128","endLine":7,"endColumn":21},{"ruleId":"173","severity":2,"message":"176","line":8,"column":3,"nodeType":"128","endLine":8,"endColumn":24},{"ruleId":"177","severity":2,"message":"178","line":46,"column":3,"nodeType":"128","endLine":46,"endColumn":28},{"ruleId":"179","severity":2,"message":"180","line":46,"column":3,"nodeType":"167","endLine":46,"endColumn":11},{"ruleId":"126","severity":2,"message":"181","line":46,"column":3,"nodeType":"128","endLine":46,"endColumn":28},{"ruleId":"129","severity":2,"message":"130","line":2,"column":23,"nodeType":"131","endLine":2,"endColumn":35},{"ruleId":"129","severity":2,"message":"130","line":3,"column":23,"nodeType":"131","endLine":3,"endColumn":35},{"ruleId":"177","severity":2,"message":"182","line":70,"column":3,"nodeType":"128","endLine":70,"endColumn":39},"react/require-default-props","propType \"darkModeDefault\" is not required, but has no corresponding defaultProps declaration.","Property","import/no-extraneous-dependencies","'prop-types' should be listed in the project's dependencies. Run 'npm i -S prop-types' to add it","Literal","import/no-unresolved","Unable to resolve path to module '../AddTask'.","import/extensions","Missing file extension for \"../AddTask\"","lines-around-directive",["183"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"Unable to resolve path to module '../Projects'.","Missing file extension for \"../Projects\"","Unable to resolve path to module '../AddProject'.","Missing file extension for \"../AddProject\"","func-names","Unexpected unnamed function.","FunctionExpression","unnamed","vars-on-top","All 'var' declarations must be at the top of the function scope.","VariableDeclaration","top","no-var","Unexpected var, use let or const instead.","unexpectedVar","no-plusplus","Unary operator '--' used.","UpdateExpression","unexpectedUnaryOp","block-scoped-var","'i' used outside of binding context.","Identifier","outOfScope","Unary operator '++' used.","import/named","generatePushId not found in '../helpers'","propType \"shouldShow\" is not required, but has no corresponding defaultProps declaration.","react/prop-types","'setProject' is missing in props validation","'showProjectOverlay' is missing in props validation","'setShowProjectOverlay' is missing in props validation","react/forbid-prop-types","Prop type `array` is forbidden","react/no-unused-prop-types","'projects' PropType is defined but prop is never used","propType \"projects\" is not required, but has no corresponding defaultProps declaration.","Prop type `object` is forbidden","padding-line-between-statements"]